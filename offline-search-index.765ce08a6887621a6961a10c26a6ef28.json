[{"body":" This is a placeholder page for event sourcing\nMicrosoft - Event Sourcing pattern Microsoft - Event Driven Architecture AWS - Event Driven Architecture Versioning in an Event Sourced System Martin Fowler - Event Sourcing Why Event Sourcing? Pattern: Event sourcing Event Sourcing and CQRS with Marten(DB) 1 year of Event Sourcing and CQRS Democratising Fare Storage at Scale using Event Sourcing ","categories":["Software"],"description":"Event sourcing is a software architectural pattern that stores a log of all changes made to a system's state as a sequence of events, allowing the system to reconstruct its current state and track the history of changes.\n","excerpt":"Event sourcing is a software architectural pattern that stores a log …","ref":"/docs/patterns/event_sourcing/","tags":["pattern"],"title":"Event Sourcing"},{"body":" WIP: Placeholder page\nBulkhead pattern ","categories":["Software"],"description":"The bulkhead pattern helps to improve the stability and resiliency of a system by isolating components or resources into separate pools or partitions, allowing the system to continue functioning even if one part fails.\n","excerpt":"The bulkhead pattern helps to improve the stability and resiliency of …","ref":"/docs/patterns/bulkhead/","tags":["pattern"],"title":"Bulkhead"},{"body":" WIP: Placeholder page\nCircuit Breaker pattern\n","categories":["Software"],"description":"The circuit breaker pattern helps to prevent further failures in a system by tripping a circuit breaker and failing fast when failures occur, improving the system's resiliency and stability.\n","excerpt":"The circuit breaker pattern helps to prevent further failures in a …","ref":"/docs/patterns/circuit_breaker/","tags":["pattern"],"title":"Circuit Breaker"},{"body":" WIP: Placeholder page\nMartin Fowler - CQRS Microsoft - CQRS pattern Pattern: Command Query Responsibility Segregation (CQRS) Clarified CQRS Event Sourcing and CQRS with Marten(DB) 1 year of Event Sourcing and CQRS ","categories":["Software"],"description":"CQRS (Command Query Responsibility Segregation) is a software architectural pattern that separates the responsibility for modifying data (commands) from the responsibility for reading data (queries) into separate objects or components, allowing for more efficient and scalable handling of data in a system.\n","excerpt":"CQRS (Command Query Responsibility Segregation) is a software …","ref":"/docs/patterns/cqrs/","tags":["pattern"],"title":"CQRS"},{"body":"","categories":["Software"],"description":"Software Engineering Patterns\n","excerpt":"Software Engineering Patterns\n","ref":"/docs/patterns/","tags":"","title":"Patterns"},{"body":" WIP: Placeholder page\nSaga distributed transactions pattern ","categories":["Software"],"description":"The saga pattern is a software design pattern that allows a system to coordinate the completion of long-running, complex transactions by breaking them down into a series of smaller, independent steps or \"sagas,\" and ensuring that each step is completed or compensated for if an error occurs.\n","excerpt":"The saga pattern is a software design pattern that allows a system to …","ref":"/docs/patterns/saga/","tags":["pattern"],"title":"Saga"},{"body":" WIP: Placeholder page\nSharding pattern ","categories":["Software"],"description":"Sharding is a database scalability technique that involves dividing a large database into smaller, independent shards or partitions and distributing the data across multiple servers or nodes, allowing the database to scale horizontally and handle a larger amount of data and queries.\n","excerpt":"Sharding is a database scalability technique that involves dividing a …","ref":"/docs/patterns/sharding/","tags":["pattern"],"title":"Sharding"},{"body":" WIP: Placeholder page\nStrangler Fig Apply the Strangler Fig Application pattern to microservices applications The Strangler Fig Migration Pattern Refactoring Legacy Code with the Strangler Fig Pattern ","categories":["Software"],"description":"The strangler fig pattern is a software design pattern that involves gradually replacing parts of a legacy system with a new system by wrapping the legacy system with a new interface and redirecting traffic to the new system over time, allowing the legacy system to be replaced without disrupting the existing system.\n","excerpt":"The strangler fig pattern is a software design pattern that involves …","ref":"/docs/patterns/strangler_fig/","tags":["pattern"],"title":"Strangler Fig"},{"body":" WIP: Placeholder page\nWikipedia: Conflict-free replicated data type Conflict-free Replicated Data Types ","categories":["Software"],"description":"CRDTs (Conflict-free Replicated Data Types) are data structures that allow multiple replicas of a shared data set to be kept in sync without the need for a central authority or global clock, using techniques such as convergence, idempotence, and commutativity to resolve conflicts and ensure consistency among the replicas.\n","excerpt":"CRDTs (Conflict-free Replicated Data Types) are data structures that …","ref":"/docs/crdts/","tags":["data-structure"],"title":"CRDTs"},{"body":" WIP: Placeholder page\nDatabricks was founded by the original creators of Apache Spark an open-source unified analytics engine for large-scale data processing.\n","categories":["Data"],"description":"All your data, analytics and AI on one platform\n","excerpt":"All your data, analytics and AI on one platform\n","ref":"/docs/databricks/","tags":["databricks","bi"],"title":"Databricks"},{"body":" This is a placeholder page for real-time analytics\nResources The Log: What every software engineer should know about real-time data’s unifying abstraction Realtime Product Observability with Apache Druid Powering real-time data analytics with Druid at Twitter Design Patterns for Real-time Insights in Financial Services Real-time lineage with Unity Catalog ARC Uses a Lakehouse Architecture for Real-time Data Insights That Optimize Drilling Performance and Lower Carbon Emissions Meroxa is a real-time data platform as a service. ","categories":["Data"],"description":"Real-time analytics is the process of collecting, analyzing, and visualizing data in real time, allowing organizations to make informed decisions and take immediate action based on the most up-to-date information.\n","excerpt":"Real-time analytics is the process of collecting, analyzing, and …","ref":"/docs/real-time_analytics/","tags":"","title":"Real-Time Analytics"},{"body":" This is a placeholder page for streaming systems\nResources The Log: What every software engineer should know about real-time data’s unifying abstraction The world beyond batch - streaming 101 The world beyond batch - streaming 102 Netflix - Keystone Netflix - Mantis Netflix - Kafka + Keystone Databricks - CDC DLT How does Kafka Perform when you need Low Latency Streaming Data Exchange - Data Mesh Kafka API De Facto Standard - Event Streaming Apache Kafka and the Data Mesh Flink w/ RocksDB on AKS Event Types in Kafka Topics History of Apache Storm and Lessons Learned Processing Billions of Events in Real Time at Twitter Benefits of using Kafka to Handle RTDS RTDP Arch - Spark + Kafka + ClickHouse Streaming Windows Event Logs Cube Materialize Integration Litestream Slack - Building Self Driving Kafka Clusters Apache Kafka - Refcard Apache ActiveMQ vs Kafka Streaming Applications on Serverless Spark Live Analytics - Materialize Rill Data - Apache Druid - DuckDB Managed Kafka Services - Which one is right for you? Streaming Data Building a search index with Kafka and Elasticsearch Streaming Graph Library RisingWave similar to Materialize Graph Databases Microsoft - Intro to Data Streaming Databricks - What is Spark Streaming How Uplift built CDC and Multiplexing data pipelines with Databricks Delta Live Tables Existing Tools Apache Beam GCP Dataflow Apache Flink AWS Kinesis Apache Spark Databricks Apache Kafka Redpanda Confluent Akka Platform Akka Streams Cloudflow Hazelcast - Jet Fluvio Apache Pulsar NATS Jetstream RabbitMQ Streams Azure EventHub Apache Heron Apache Storm Apache Samza MemQ Twister2 Faust ","categories":["Data","Software"],"description":"Streaming systems are computer systems designed to continuously process and analyze data as it is generated or received in real time, allowing organizations to extract insights and take action on data as it becomes available, rather than having to wait for data to be stored and processed in batch.\n","excerpt":"Streaming systems are computer systems designed to continuously …","ref":"/docs/streaming_systems/","tags":"","title":"Streaming Systems"},{"body":" This knowledge base is as full as my brain is. Soz.\nSomething, something, data, something something insights.\n","categories":"","description":"What little knowledge I have accumulated, shared with whomever desires it\n","excerpt":"What little knowledge I have accumulated, shared with whomever desires …","ref":"/docs/","tags":"","title":"Knowledge Base"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/","tags":"","title":"Categories"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/data/","tags":"","title":"Data"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/pattern/","tags":"","title":"pattern"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/software/","tags":"","title":"Software"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/","tags":"","title":"Tags"},{"body":"","categories":"","description":"","excerpt":"","ref":"/docs/functional-programming/","tags":"","title":""},{"body":"","categories":"","description":"","excerpt":"","ref":"/docs/functional-programming/scala/","tags":"","title":""},{"body":" About Terence Munro I like cats. Who am I? Hi! I am one of the Lead Engineers at Aginic. I’m both shy and an introvert, but I am forcing myself to write this as a way to improve my writing and communication skills.\nI’m the type of person who isn’t so fond of expressing myself publically. But I thought I should give some background and reasoning behind me writing this to temper any expectations 😹.\nI have been a software developer for around 13 years and within the last year or so also adding data engineering to the mix. I am the first to admit, I’m not particularly expert at any one thing. The embodiment of jack of all trades master of none. I think I’ve used a different technology on every single project I’ve ever been on. The upside to this, I feel, is that I’ve gotten quite good at learning new things quickly and even though I may not be an expert at any specific subset of our craft, I have picked up a lot of experience along the way.\nWhich brings me to why I am writing this, and what you may get out of it should you choose to read any of it. I want to share what I know or what I’m learning with others but my problem is, I am too shy to give talks, and I have never been great at writing. So by writing these posts I hope to slowly improve at writing while sharing what I am learning or old topics that I decided to revisit.\nSo, if you’ve made it this far, thank you and I hope I can write about something that will interest you. If you have any feedback, suggestions or questions please let me know in whatever way suits you most.\nGitHub https://github.com/terrymunro LinkedIn https://www.linkedin.com/in/terrymunro Keybase https://keybase.io/terrymunro Mastodon https://mastodon.au/@terrymunro p.s. I have three cats, so I might slip photos of them in my posts to sweeten the pot. Nodame Lilith Jellybeans ","categories":"","description":"","excerpt":" About Terence Munro I like cats. Who am I? Hi! I am one of the Lead …","ref":"/about/","tags":"","title":"About"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/architecture/","tags":"","title":"architecture"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/associate/","tags":"","title":"associate"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/best-practices/","tags":"","title":"best-practices"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/bi/","tags":"","title":"bi"},{"body":"","categories":"","description":"","excerpt":"","ref":"/blog/","tags":"","title":"Blog"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/data-lake/","tags":"","title":"data-lake"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/data-science/","tags":"","title":"data-science"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/data-structure/","tags":"","title":"data-structure"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/databricks/","tags":"","title":"databricks"},{"body":" WIP: Placeholder page\nPartner Academy Customer Academy Databricks Certified Data Engineer Associate Practice Exam DataBricks Associate Data Engineer Prep - Notes.pdf Databricks Academy FAQ Data Engineering - Professional Notes ","categories":["Data"],"description":"The Databricks Certified Data Engineer Associate\n","excerpt":"The Databricks Certified Data Engineer Associate\n","ref":"/docs/databricks/de-associate/","tags":["databricks","associate","exam"],"title":"DE Associate"},{"body":" WIP: Placeholder page\nPartner Academy Customer Academy Data Engineering - Associate Notes ","categories":["Data"],"description":"The Databricks Certified Data Engineer Professional\n","excerpt":"The Databricks Certified Data Engineer Professional\n","ref":"/docs/databricks/de-professional/","tags":["databricks","professional","exam"],"title":"DE Professional"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/exam/","tags":"","title":"exam"},{"body":" These are just quick n dirty notes, will fill this out with more substance another time.\nMedallion Architecture Bronze Append only Retain everything Soft-deletes if necessary Hard-deletes if required by regulatory reasons Don’t parse the underlying data, Silver Ease of query Clean data ACID transactions Enterprise data model 3rd normal form De-normalisation for performance reasons Uses Delta Lake tables Preserves grain of original data (no aggregation) Eliminates duplicate records Enforce production schema Gold Layer Designed for a particular user community Reduces costs associated with ad hoc queries Allows fine grained permissions Power ML applications, reporting, dashboards, ad hoc analytics Shifts query updates to production workloads ","categories":["Data"],"description":"Medallion architecture is a data storage solution that uses a tiered approach to manage data within a Lakehouse, with the bronze layer representing raw data, the silver layer representing transformed or aggregated data, and the gold layer representing data that is ready for consumption or analysis.\n","excerpt":"Medallion architecture is a data storage solution that uses a tiered …","ref":"/docs/databricks/medallion-architecture/","tags":["databricks","data-science","bi","best-practices","architecture","data-lake"],"title":"Medallion Architecture"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/professional/","tags":"","title":"professional"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/resources/","tags":"","title":"resources"},{"body":"🔒 Security Coarse-grained Data Access Control Secure access to S3 buckets using instance profiles | Databricks on AWS Fine-grained Data Access Control SAML 2.0 Federation credential passthrough Access S3 buckets using IAM credential passthrough with Databricks SCIM | Databricks on AWS Manage cluster policies | Databricks on AWS Restrict access to PII Data - Encrypt columns 🔖 Documentation Auto Loader | Databricks on AWS Optimize performance with file management | Databricks on AWS 📇 Other Resources Databricks Academy - Home - Databricks Delta Live Tables Demo - Databricks How to Create an R\u0026D Lakehouse Based on FAIR Data Principles Security Best Practices for Databricks on AWS databricks/security-bucket-brigade MrPowers/spark-daria databricks/tech-talks YouTube | Databricks Online User Community Medallion Architecture Query Watchdog: Handling Disruptive Queries in Spark SQL Best Practices - Videos Disaster Recovery Overview Attack of the Delta Clones - Against Disaster Recovery Availability Complexity Using Deep Clone Disaster Recovery Delta Lake Overwatch - Audit Logs DeltaOMS - Delta operational metrics store Audit Logs Auto-Loader Schema Inference Databricks Terraform Docs Videos Vimeo | Databricks Introduction to Instance Pools Training Notebooks Data Engineering with Databricks Apache Spark Programming with Databricks Data Analysis with Databricks Advanced Data Engineering with Databricks ML In Production Self-Paced Courses Data Engineering with Databricks Data Engineering Learning Plan Partner Learning Catalog Unsorted Slides - Welcome to Databricks Lakehouse Slides - Data Engineering Technical Overview Bootcamp Github ","categories":["Data"],"description":"Links to Databricks Resources\n","excerpt":"Links to Databricks Resources\n","ref":"/docs/databricks/resources/","tags":["databricks","resources"],"title":"Resources"},{"body":"","categories":"","description":"","excerpt":"","ref":"/search/","tags":"","title":"Search Results"},{"body":" Nothing to see here Knowledge Base Dotfiles Seriously though, I haven't got any content yet.\nDon’t know what you were expecting to be here.\nWhat should go here? I have no idea\nContributions welcome! Pull Request contributions always welcome.\nterrymunro/terrymunro.github.io …\nFollow me on Mastodon! Not that I actually ever post anything\n@terrymunro@mastodon.au …\n","categories":"","description":"","excerpt":" Nothing to see here Knowledge Base Dotfiles Seriously though, I …","ref":"/","tags":"","title":"Terence Munro"}]